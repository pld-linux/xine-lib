--- xine-lib-0.9.9/configure.in~	Thu May  2 20:35:53 2002
+++ xine-lib-0.9.9/configure.in	Thu May  2 20:35:53 2002
@@ -599,200 +599,6 @@
 enable_w32dll="no"
 enable_ffmmx="no"
 
-case "$host_or_hostalias" in
-  i386-*-freebsd*)
-    CFLAGS="$CFLAGS -pipe -fomit-frame-pointer -malign-functions=4 -malign-loops=4 -malign-jumps=4 -malign-functions=4 $m_wm $m_psb -fexpensive-optimizations $f_si $f_nsa -ffast-math -funroll-loops -finline-functions"
-    DEBUG_CFLAGS="$X_CFLAGS $DEBUG_CFLAGS"
-    AC_DEFINE(__i386__)
-    AC_DEFINE([ARCH_X86],,[x86 architecture])
-    AC_DEFINE(FPM_INTEL)
-
-    enable_w32dll="yes"
-    enable_ffmmx="yes"
-    no_fpic="yes"
-    ;;
-
-
-  i?86-*-linux* | i386-*-solaris* | i?86-* | k?-* | athlon-*)
-
-    if test "$GCC" = yes; then
-	dnl Check for gcc cpu optimization support
-	AC_TRY_CFLAGS("-mcpu=i386", 
-		sarchopt="-mcpu",
-		AC_TRY_CFLAGS("-march=i386", 
-			sarchopt="-march",
-			[ AC_MSG_RESULT(** no cpu optimization supports **)
-			  sarchopt=no ]))
-
-	dnl special check for k7 cpu CC support
-        AC_TRY_CFLAGS("$sarchopt=athlon", k7cpu="athlon", k7cpu="i686")
-
-	dnl add x86 specific gcc CFLAGS
-	CFLAGS="$CFLAGS -O3 -pipe -fomit-frame-pointer -malign-functions=4 -malign-loops=4 -malign-jumps=4 -malign-functions=4 $m_wm $m_psb -fexpensive-optimizations $f_si $f_nsa -ffast-math -funroll-loops -funroll-all-loops -finline-functions"
-
-	DEBUG_CFLAGS="$DEBUG_CFLAGS -O3"
-
-	if test x"$sarchopt" != "xno"; then
-	    [
-	    archopt_val=
-
-	    case "$host_alias" in
-	    i386-*) # *BSD return this even on a P III #-))
-		archopt_val=i386 ;;
-	    i486-*) # oh dear!
-		archopt_val=i486 ;;
-	    i586-*)
-		archopt_val=pentium ;;
-	    i686-*)
-		archopt_val=pentiumpro
-		if test x"$check_athlon" = "xyes"; then
-		    if test -f /proc/cpuinfo; then
-			modelname=`cat /proc/cpuinfo | grep "model\ name\	:" | sed -e 's/ //g' | cut -d':' -f2`
-			case "$modelname" in
-			*Athlon* | *Duron* | *K7*)
-			    archopt_val="$k7cpu" ;;
-			esac
-		    fi 
-		fi
-		;;
-	    k6-*)
-		archopt_val=k6 ;;
-	    k7-*)
-		archopt_val=k7 ;;
-	    athlon-*)
-		archopt_val=athlon ;;
-	    esac
-
-	    if test x"$archopt_val" != x; then
-		CFLAGS="$CFLAGS $sarchopt=$archopt_val"
-		DEBUG_CFLAGS="$DEBUG_CFLAGS $sarchopt=$archopt_val"
-	    fi
-	    ]
-	fi
-
-    	dnl enable x86 specific parts of the code
-	dnl
-	dnl all of this stuff needs gcc/gas; it uses gnu c compiler extensions
-	dnl like the extended asm() or __attribute(__cdecl__), or other direct
-	dnl mmx/sse/3dnow assembler instructions. 
-	dnl
-	AC_DEFINE([ARCH_X86],,[x86 architecture])
-	AC_DEFINE(FPM_INTEL)
-	enable_w32dll="yes"
-    	enable_ffmmx="yes"
-    else
-	dnl add x86 specific cc CFLAGS
-	CFLAGS="$CFLAGS -O"
-	DEBUG_CFLAGS="$DEBUG_CFLAGS -O"
-    	AC_DEFINE(FPM_64BIT)
-    fi
-
-    no_fpic="yes"
-    AC_DEFINE(__i386__)
-    ;;
-
-  alphaev56-*)
-    CFLAGS="$CFLAGS -O3 -mcpu=ev56 -mieee"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O3 -mcpu=ev56 -mieee"
-    AC_DEFINE(FPM_64BIT)
-    ;;
-
-  alpha*)
-    CFLAGS="$CFLAGS -O3 -mieee"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O3 -mieee"
-    AC_DEFINE(FPM_64BIT)
-    ;;
-
-  ppc-*-linux* | powerpc-*) 
-    CFLAGS="$CFLAGS -O3 -pipe -fomit-frame-pointer $m_wm $m_psb -fexpensive-optimizations $f_si $f_nsa -ffast-math -funroll-loops -funroll-all-loops -finline-functions"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O3"
-    AC_DEFINE(FPM_PPC)
-    AC_DEFINE(ARCH_PPC)
-    
-    if test x$enable_altivec = xyes; then
-        AC_DEFINE(ENABLE_ALTIVEC)
-        CFLAGS="$CFLAGS -Wa,-m7400"
-    fi
-    ;;
-
-  sparc*-*-linux*)
-    case $host_alias in
-    sparc-*)    cpu_cflags="-mcpu=supersparc -mtune=supersparc" ;;
-    sparc64-*)  cpu_cflags="-mcpu=supersparc -mtune=ultrasparc" ;;
-    esac
-    CFLAGS="$CFLAGS -O3 $cpu_cflags -funroll-loops -funroll-all-loops -finline-functions"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O $cpu_cflags -funroll-loops -funroll-all-loops -finline-functions"
-
-    AC_DEFINE(FPM_SPARC)
-    ;;
-
-  sparc-*-solaris*)
-    if test "$GCC" = yes; then
-	case `uname -m` in
-	sun4c) cpu_cflags="-mcpu=v7 -mtune=supersparc" ;;
-	sun4m) cpu_cflags="-mcpu=v8 -mtune=supersparc" ;;
-	sun4u) cpu_cflags="-mcpu=supersparc -mtune=ultrasparc" ;;
-	*)     cpu_cflags= ;;
-	esac
-	cc_optimize_cflags="-O3 $cpu_cflags -funroll-loops -funroll-all-loops -finline-functions"
-	cc_debug_cflags="-O $cpu_cflags -funroll-loops -funroll-all-loops -finline-functions"
-        AC_DEFINE(FPM_SPARC)		dnl uses gnu c asm extensions
-    else
-	cc_optimize_cflags="-O"
-	cc_debug_cflags="-O"
-    	AC_DEFINE(FPM_64BIT)		dnl use portable version with non-gcc
-    fi
-    CFLAGS="$CFLAGS $cc_optimize_cflags"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS $cc_debug_cflags"
-    ;;
-
-  mips-*)
-    CFLAGS="$CFLAGS -O3"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O"
-    AC_DEFINE(FPM_MIPS)
-    ;;
-
-  m68k-*)
-    CFLAGS="$CFLAGS -O2"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O"
-    AC_DEFINE(FPM_DEFAULT)
-    ;;
-
-  ia64-*)
-    CFLAGS="$CFLAGS -O3"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O3"
-    AC_DEFINE(FPM_64BIT)
-    ;;
-
-  s390-*)
-    CFLAGS="$CFLAGS -O3"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O3"
-    AC_DEFINE(FPM_DEFAULT)
-    ;;
-
-  *)
-    echo
-    echo "****************************** WARNING ******************************"
-    echo
-    echo "Host type '$host' ($host_alias) is currently not supported by xine"
-    echo
-    echo "Assuming that -O3 makes the compiler produce useful code."
-    echo
-    echo "You might experience problems with this, so please report your"
-    echo "architecture and, if possible, known good optimization flags for"
-    echo "your compiler to <xine-devel@lists.sf.net>"\!
-    echo
-    echo "*********************************************************************"
-    echo "(sleeping one minute so you can read this...)"
-    sleep 60
-
-    CFLAGS="$CFLAGS -O3"
-    DEBUG_CFLAGS="$DEBUG_CFLAGS -O"
-    AC_DEFINE(FPM_DEFAULT)
-    ;;
-esac
-
-
 CFLAGS="$CFLAGS $ALSA_CFLAGS $ESD_CFLAGS $ARTS_CFLAGS $IRIXAL_CFLAGS"
 DEBUG_CFLAGS="$DEBUG_CFLAGS $ALSA_CFLAGS $ESD_CFLAGS $ARTS_CFLAGS $IRIXAL_CFLAGS"
 
